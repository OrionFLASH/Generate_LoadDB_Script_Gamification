# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è main.py —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ f-—Å—Ç—Ä–æ–∫–∞–º–∏
# –û—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞ –±—ã–ª–∞ –≤ —Ç–æ–º, —á—Ç–æ –≤ f-—Å—Ç—Ä–æ–∫–∞—Ö Python –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–≤–æ–π–Ω—ã–µ —Ñ–∏–≥—É—Ä–Ω—ã–µ —Å–∫–æ–±–∫–∏ –¥–ª—è —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
FUNCTION_CONFIGS = {
    "rating_list": {
        "business_blocks": [
            "KMKKSB",      # –ö–ª–∏–µ–Ω—Ç—Å–∫–∏–π –º–µ–Ω–µ–¥–∂–µ—Ä –∫—Ä—É–ø–Ω–µ–π—à–µ–≥–æ, –∫—Ä—É–ø–Ω–æ–≥–æ –∏ —Å—Ä–µ–¥–Ω–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞
            "MNS",         # –ú–µ–Ω–µ–¥–∂–µ—Ä –Ω–µ—Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
            "SERVICEMEN",  # –°–µ—Ä–≤–∏—Å-–º–µ–Ω–µ–¥–∂–µ—Ä
            "KMFACTORING", # –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –°–±–µ—Ä–§–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞
            "KMSB1",       # –ú–µ–Ω–µ–¥–∂–µ—Ä –°–±–µ—Ä–ü–µ—Ä–≤—ã–π
            "IMUB",        # –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä –£–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ë–ª–∞–≥–æ—Å–æ—Å—Ç–æ—è–Ω–∏—è
            "RNUB",        # –†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–ª–∞–≥–æ—Å–æ—Å—Ç–æ—è–Ω–∏—è
            "RSB1"         # –†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –°–±–µ—Ä–ü–µ—Ä–≤—ã–π
        ],
        "time_periods": [
            "ACTIVESEASON",  # –ë–∞–∑–æ–≤—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä - –∞–∫—Ç–∏–≤–Ω—ã–π —Å–µ–∑–æ–Ω
            "SEASON_2025_1",  # –°–µ–∑–æ–Ω 2025-1
            "SEASON_2024",  # –°–µ–∑–æ–Ω 2024
            "ALLTHETIME"  # –í—Å–µ –≤—Ä–µ–º—è
        ],
        "processing_options": {
            "max_participants_per_page": 100,
            "remove_photo_data": True,
            "skip_empty_pages": True
        },
        "delay_between_requests": 5,
        "retry_count": 3
    }
}

def generate_rating_list_script_fixed(data_list=None):
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç JavaScript —Å–∫—Ä–∏–ø—Ç –¥–ª—è –≤—ã–≥—Ä—É–∑–∫–∏ —Ä–µ–π—Ç–∏–Ω–≥–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø–æ –±–∏–∑–Ω–µ—Å-–±–ª–æ–∫–∞–º –∏ –ø–µ—Ä–∏–æ–¥–∞–º –≤—Ä–µ–º–µ–Ω–∏
    """
    # –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è rating_list
    config = FUNCTION_CONFIGS["rating_list"]
    
    # –ü–æ–ª—É—á–∞–µ–º –±–∏–∑–Ω–µ—Å-–±–ª–æ–∫–∏ –∏ –ø–µ—Ä–∏–æ–¥—ã –≤—Ä–µ–º–µ–Ω–∏ –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    business_blocks = config.get('business_blocks', [])
    time_periods = config.get('time_periods', [])
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏
    max_participants_per_page = config.get('processing_options', {}).get('max_participants_per_page', 100)
    delay = config.get('delay_between_requests', 5)
    max_retries = config.get('retry_count', 3)
    remove_photo_data = config.get('processing_options', {}).get('remove_photo_data', True)
    skip_empty_pages = config.get('processing_options', {}).get('skip_empty_pages', True)
    
    # –°–æ–∑–¥–∞–µ–º JavaScript –∫–æ–¥ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ f-—Å—Ç—Ä–æ–∫–∞–º–∏
    script = f'''
// ==UserScript==
// –°–∫—Ä–∏–ø—Ç –¥–ª—è DevTools. –í—ã–≥—Ä—É–∑–∫–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø–æ –±–∏–∑–Ω–µ—Å-–±–ª–æ–∫–∞–º –∏ –ø–µ—Ä–∏–æ–¥–∞–º –≤—Ä–µ–º–µ–Ω–∏ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
// –í–∞—Ä–∏–∞–Ω—Ç: SIGMA
// API: https://salesheroes.sberbank.ru/bo/rmkib.gamification/api/v1/ratinglist
// –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: divisionLevel=BANK
// –ë–∏–∑–Ω–µ—Å-–±–ª–æ–∫–∏: {", ".join(business_blocks)}
// –ü–µ—Ä–∏–æ–¥—ã –≤—Ä–µ–º–µ–Ω–∏: {", ".join(time_periods)}
(async () => {{
  function removePhotoData(obj) {{
    if (Array.isArray(obj)) {{ obj.forEach(removePhotoData); }}
    else if (obj && typeof obj === 'object') {{
      Object.keys(obj).forEach(key => {{
        if (key === 'photoData') delete obj[key];
        else removePhotoData(obj[key]);
      }});
    }}
  }}

  function getTimestamp() {{
    const d = new Date();
    const pad = n => n.toString().padStart(2, '0');
    return d.getFullYear().toString() + pad(d.getMonth() + 1) + pad(d.getDate()) + '-' + pad(d.getHours()) + pad(d.getMinutes()) + pad(d.getSeconds());
  }}

  function extractParticipantsCount(data) {{
    try {{
      // –ü—ã—Ç–∞–µ–º—Å—è –∏–∑–≤–ª–µ—á—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏–∑ –ø–æ–ª—è contestants (–Ω–∞–ø—Ä–∏–º–µ—Ä: "1 557 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø–æ —Å—Ç—Ä–∞–Ω–µ")
      if (data?.body?.rating?.contestants) {{
        const contestantsText = data.body.rating.contestants;
        const match = contestantsText.match(/(\\d+(?:\\s*\\d+)*)/);
        if (match) {{
          // –£–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã –∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —á–∏—Å–ª–æ
          const numberStr = match[1].replace(/\\s/g, '');
          const count = parseInt(numberStr, 10);
          if (!isNaN(count)) {{
            return count;
          }}
        }}
      }}
      
      // –ü—ã—Ç–∞–µ–º—Å—è –∏–∑–≤–ª–µ—á—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –º–µ—Å—Ç –≤ –æ—Ç–≤–µ—Ç–µ
      if (data?.body?.totalCount !== undefined) {{
        return data.body.totalCount;
      }} else if (data?.body?.participantsCount !== undefined) {{
        return data.body.participantsCount;
      }} else if (data?.body?.count !== undefined) {{
        return data.body.count;
      }} else if (data?.totalCount !== undefined) {{
        return data.totalCount;
      }} else if (data?.participantsCount !== undefined) {{
        return data.participantsCount;
      }} else if (data?.count !== undefined) {{
        return data.count;
      }}
      
      // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ —è–≤–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ, —Å—á–∏—Ç–∞–µ–º –ø–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –Ω–∞ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
      const participants = data?.body?.participants || data?.body?.data || data?.participants || data?.data || [];
      return participants.length;
    }} catch (e) {{
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:', e);
      return 0;
    }}
  }}

  function extractParticipants(data) {{
    try {{
      // –ü—ã—Ç–∞–µ–º—Å—è –∏–∑–≤–ª–µ—á—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏–∑ –ø–æ–ª—è leaders –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ rating
      if (data?.body?.rating?.leaders && Array.isArray(data.body.rating.leaders)) {{
        return data.body.rating.leaders;
      }}
      
      // –ü—ã—Ç–∞–µ–º—Å—è –∏–∑–≤–ª–µ—á—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –º–µ—Å—Ç –≤ –æ—Ç–≤–µ—Ç–µ
      if (data?.body?.participants && Array.isArray(data.body.participants)) {{
        return data.body.participants;
      }} else if (data?.body?.data && Array.isArray(data.body.data)) {{
        return data.body.data;
      }} else if (data?.participants && Array.isArray(data.participants)) {{
        return data.participants;
      }} else if (data?.data && Array.isArray(data.data)) {{
        return data.data;
      }} else if (Array.isArray(data?.body)) {{
        return data.body;
      }} else if (Array.isArray(data)) {{
        return data;
      }}
      return [];
    }} catch (e) {{
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:', e);
      return [];
    }}
  }}

  async function fetchWithRetry(url, options, maxRetries = {max_retries}, timeout = 30000) {{
    for (let attempt = 1; attempt <= maxRetries; attempt++) {{
      try {{
        const controller = new AbortController();
        const id = setTimeout(() => controller.abort(), timeout);
        const response = await fetch(url, {{ ...options, signal: controller.signal }});
        clearTimeout(id);
        return response;
      }} catch (e) {{
        if (attempt === maxRetries) throw e;
        console.log(`üîÑ –ü–æ–ø—ã—Ç–∫–∞ ${{attempt}}/${{maxRetries}} –Ω–µ —É–¥–∞–ª–∞—Å—å, –ø–æ–≤—Ç–æ—Ä—è–µ–º —á–µ—Ä–µ–∑ ${{attempt}} —Å–µ–∫...`);
        await new Promise(r => setTimeout(r, 1000 * attempt));
      }}
    }}
  }}

  const businessBlocks = {business_blocks};
  const timePeriods = {time_periods};
  const BASE_URL = 'https://salesheroes.sberbank.ru/bo/rmkib.gamification/api/v1/ratinglist';
  const DIVISION_LEVEL = 'BANK';
  const results = {{}};
  let totalParticipants = 0;
  let processed = 0, skipped = 0, errors = 0;

  console.log(`üöÄ –ù–∞—á–∏–Ω–∞–µ–º –≤—ã–≥—Ä—É–∑–∫—É —Ä–µ–π—Ç–∏–Ω–≥–∞ –¥–ª—è ${{businessBlocks.length}} –±–∏–∑–Ω–µ—Å-–±–ª–æ–∫–æ–≤ –∏ ${{timePeriods.length}} –ø–µ—Ä–∏–æ–¥–æ–≤ –≤—Ä–µ–º–µ–Ω–∏`);
  console.log(`üìä –ú–∞–∫—Å–∏–º—É–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É: {max_participants_per_page}`);
  console.log(`‚è±Ô∏è –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏: {delay} —Å–µ–∫`);
  console.log(`üîÑ –ú–∞–∫—Å–∏–º—É–º –ø–æ–ø—ã—Ç–æ–∫ –ø—Ä–∏ –æ—à–∏–±–∫–µ: {max_retries}`);

  // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Å–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ –±–∏–∑–Ω–µ—Å-–±–ª–æ–∫–æ–≤ –∏ –ø–µ—Ä–∏–æ–¥–æ–≤ –≤—Ä–µ–º–µ–Ω–∏
  let combinationIndex = 0;
  const totalCombinations = businessBlocks.length * timePeriods.length;

  for (let businessBlockIndex = 0; businessBlockIndex < businessBlocks.length; businessBlockIndex++) {{
    const businessBlock = businessBlocks[businessBlockIndex];
    
    for (let timePeriodIndex = 0; timePeriodIndex < timePeriods.length; timePeriodIndex++) {{
      const timePeriod = timePeriods[timePeriodIndex];
      combinationIndex++;
      
      console.log(`\\nüîç [${{combinationIndex}}/${{totalCombinations}}] –ë–∏–∑–Ω–µ—Å-–±–ª–æ–∫: ${{businessBlock}}, –ü–µ—Ä–∏–æ–¥: ${{timePeriod}}`);
      
      try {{
        // –ü–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        console.log(`üìÑ [${{combinationIndex}}/${{totalCombinations}}] –ë–∏–∑–Ω–µ—Å-–±–ª–æ–∫: ${{businessBlock}}, –ü–µ—Ä–∏–æ–¥: ${{timePeriod}} - –ó–∞–ø—Ä–æ—Å —Å—Ç—Ä–∞–Ω–∏—Ü—ã 1`);
        const firstUrl = `${{BASE_URL}}?divisionLevel=${{DIVISION_LEVEL}}&timePeriod=${{timePeriod}}&pageNum=1&businessBlock=${{businessBlock}}`;
        console.log(`üîó URL: ${{firstUrl}}`);
      
        const firstResp = await fetchWithRetry(firstUrl, {{
          headers: {{ 
            'Accept': '*/*',
            'Accept-Language': 'ru',
            'Cookie': document.cookie,
            'User-Agent': navigator.userAgent,
            'Referer': 'https://salesheroes.sberbank.ru/rating'
          }},
          credentials: 'include'
        }});
      
        if (!firstResp.ok) {{
          console.error(`‚ùå [${{combinationIndex}}/${{totalCombinations}}] –ë–∏–∑–Ω–µ—Å-–±–ª–æ–∫: ${{businessBlock}}, –ü–µ—Ä–∏–æ–¥: ${{timePeriod}} - HTTP –æ—à–∏–±–∫–∞: ${{firstResp.status}}`);
          errors++;
          continue;
        }}
      
        const firstData = await firstResp.json();
        console.log(`üìä [${{combinationIndex}}/${{totalCombinations}}] –ë–∏–∑–Ω–µ—Å-–±–ª–æ–∫: ${{businessBlock}}, –ü–µ—Ä–∏–æ–¥: ${{timePeriod}} - –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç, —Å—Ç–∞—Ç—É—Å: ${{firstResp.status}}`);
      
        // –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        const participantsCount = extractParticipantsCount(firstData);
        const contestantsText = firstData?.body?.rating?.contestants || '–Ω–µ —É–∫–∞–∑–∞–Ω–æ';
        console.log(`üë• [${{combinationIndex}}/${{totalCombinations}}] –ë–∏–∑–Ω–µ—Å-–±–ª–æ–∫: ${{businessBlock}}, –ü–µ—Ä–∏–æ–¥: ${{timePeriod}} - –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: ${{participantsCount}} (–∏–∑ –ø–æ–ª—è: "${{contestantsText}}")`);
      
        if (participantsCount === 0) {{
          console.log(`‚è≠Ô∏è [${{combinationIndex}}/${{totalCombinations}}] –ë–∏–∑–Ω–µ—Å-–±–ª–æ–∫: ${{businessBlock}}, –ü–µ—Ä–∏–æ–¥: ${{timePeriod}} - –ü—Ä–æ–ø—É—Å–∫–∞–µ–º (–Ω–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö)`);
          skipped++;
          continue;
        }}
      
        // –í—ã—á–∏—Å–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü (–¥–µ–ª–∏–º –Ω–∞ max_participants_per_page —Å –æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ–º –≤–≤–µ—Ä—Ö)
        const maxParticipantsPerPage = {max_participants_per_page};
        const pagesCount = Math.ceil(participantsCount / maxParticipantsPerPage);
        console.log(`üìä [${{combinationIndex}}/${{totalCombinations}}] –ë–∏–∑–Ω–µ—Å-–±–ª–æ–∫: ${{businessBlock}}, –ü–µ—Ä–∏–æ–¥: ${{timePeriod}} - –°—Ç—Ä–∞–Ω–∏—Ü –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞: ${{pagesCount}} (—É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: ${{participantsCount}}, –ø–æ ${{maxParticipantsPerPage}} –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É)`);
      
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å —Å –∫–ª—é—á–æ–º, –≤–∫–ª—é—á–∞—é—â–∏–º –ø–µ—Ä–∏–æ–¥ –≤—Ä–µ–º–µ–Ω–∏
        const resultKey = `${{businessBlock}}_${{timePeriod}}`;
        results[resultKey] = [firstData];
        const firstParticipantsCount = extractParticipants(firstData).length;
        totalParticipants += firstParticipantsCount;
        console.log(`üìä [${{combinationIndex}}/${{totalCombinations}}] –ë–∏–∑–Ω–µ—Å-–±–ª–æ–∫: ${{businessBlock}}, –ü–µ—Ä–∏–æ–¥: ${{timePeriod}} - –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ 1: ${{firstParticipantsCount}}`);
      
        // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –¥–∞–Ω–Ω—ã—Ö
        if (firstParticipantsCount === 0 && participantsCount > 0) {{
          console.log(`üîç [${{combinationIndex}}/${{totalCombinations}}] –ë–∏–∑–Ω–µ—Å-–±–ª–æ–∫: ${{businessBlock}}, –ü–µ—Ä–∏–æ–¥: ${{timePeriod}} - –û—Ç–ª–∞–¥–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö:`);
          console.log(`  - body: ${{!!firstData?.body}}`);
          console.log(`  - rating: ${{!!firstData?.body?.rating}}`);
          console.log(`  - contestants: ${{firstData?.body?.rating?.contestants || 'undefined'}}`);
          console.log(`  - leaders: ${{!!firstData?.body?.rating?.leaders}}`);
          console.log(`  - leaders.length: ${{firstData?.body?.rating?.leaders?.length || 'undefined'}}`);
          console.log(`  - participants: ${{!!firstData?.body?.participants}}`);
          console.log(`  - data: ${{!!firstData?.body?.data}}`);
          console.log(`  - participants.length: ${{firstData?.body?.participants?.length || 'undefined'}}`);
          console.log(`  - data.length: ${{firstData?.body?.data?.length || 'undefined'}}`);
        }}
      
        // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        if (pagesCount > 1) {{
          for (let page = 2; page <= pagesCount; page++) {{
            try {{
              console.log(`üìÑ [${{combinationIndex}}/${{totalCombinations}}] –ë–∏–∑–Ω–µ—Å-–±–ª–æ–∫: ${{businessBlock}}, –ü–µ—Ä–∏–æ–¥: ${{timePeriod}} - –ó–∞–ø—Ä–æ—Å —Å—Ç—Ä–∞–Ω–∏—Ü—ã ${{page}}/${{pagesCount}}`);
              const pageUrl = `${{BASE_URL}}?divisionLevel=${{DIVISION_LEVEL}}&timePeriod=${{timePeriod}}&pageNum=${{page}}&businessBlock=${{businessBlock}}`;
            
              const pageResp = await fetchWithRetry(pageUrl, {{
                headers: {{ 
                  'Accept': '*/*',
                  'Accept-Language': 'ru',
                  'Cookie': document.cookie,
                  'User-Agent': navigator.userAgent,
                  'Referer': 'https://salesheroes.sberbank.ru/rating'
                }},
                credentials: 'include'
              }});
            
              if (!pageResp.ok) {{
                console.error(`‚ùå [${{combinationIndex}}/${{totalCombinations}}] –ë–∏–∑–Ω–µ—Å-–±–ª–æ–∫: ${{businessBlock}}, –ü–µ—Ä–∏–æ–¥: ${{timePeriod}} - –°—Ç—Ä–∞–Ω–∏—Ü–∞ ${{page}} - HTTP –æ—à–∏–±–∫–∞: ${{pageResp.status}}`);
                continue;
              }}
            
              const pageData = await pageResp.json();
              const pageParticipantsCount = extractParticipants(pageData).length;
            
              // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –µ—Å–ª–∏ —ç—Ç–æ –≤–∫–ª—é—á–µ–Ω–æ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö
              if ({str(skip_empty_pages).lower()} && pageParticipantsCount === 0) {{
                console.log(`‚è≠Ô∏è [${{combinationIndex}}/${{totalCombinations}}] –ë–∏–∑–Ω–µ—Å-–±–ª–æ–∫: ${{businessBlock}}, –ü–µ—Ä–∏–æ–¥: ${{timePeriod}} - –°—Ç—Ä–∞–Ω–∏—Ü–∞ ${{page}}/${{pagesCount}} - –ü—Ä–æ–ø—É—Å–∫–∞–µ–º (–ø—É—Å—Ç–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞)`);
                continue;
              }}
            
              results[resultKey].push(pageData);
              totalParticipants += pageParticipantsCount;
              console.log(`‚úÖ [${{combinationIndex}}/${{totalCombinations}}] –ë–∏–∑–Ω–µ—Å-–±–ª–æ–∫: ${{businessBlock}}, –ü–µ—Ä–∏–æ–¥: ${{timePeriod}} - –°—Ç—Ä–∞–Ω–∏—Ü–∞ ${{page}}/${{pagesCount}} - –£—Å–ø–µ—à–Ω–æ, —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: ${{pageParticipantsCount}}`);
            
              // –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –æ—Ç–≤–µ—Ç–æ–º –∏ —Å–ª–µ–¥—É—é—â–∏–º –∑–∞–ø—Ä–æ—Å–æ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã
              if (page < pagesCount) {{
                console.log(`‚è±Ô∏è [${{combinationIndex}}/${{totalCombinations}}] –ë–∏–∑–Ω–µ—Å-–±–ª–æ–∫: ${{businessBlock}}, –ü–µ—Ä–∏–æ–¥: ${{timePeriod}} - –û–∂–∏–¥–∞–Ω–∏–µ {delay} —Å–µ–∫ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π...`);
                await new Promise(resolve => setTimeout(resolve, {delay} * 1000));
              }}
            }} catch (pageError) {{
              console.error(`‚ùå [${{combinationIndex}}/${{totalCombinations}}] –ë–∏–∑–Ω–µ—Å-–±–ª–æ–∫: ${{businessBlock}}, –ü–µ—Ä–∏–æ–¥: ${{timePeriod}} - –°—Ç—Ä–∞–Ω–∏—Ü–∞ ${{page}} - –û—à–∏–±–∫–∞:`, pageError);
            }}
          }}
        }}
      
        console.log(`‚úÖ [${{combinationIndex}}/${{totalCombinations}}] –ë–∏–∑–Ω–µ—Å-–±–ª–æ–∫: ${{businessBlock}}, –ü–µ—Ä–∏–æ–¥: ${{timePeriod}} - –ó–∞–≤–µ—Ä—à–µ–Ω, –≤—Å–µ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü: ${{results[resultKey].length}}`);
        processed++;
      
      }} catch (e) {{
        console.error(`‚ùå [${{combinationIndex}}/${{totalCombinations}}] –ë–∏–∑–Ω–µ—Å-–±–ª–æ–∫: ${{businessBlock}}, –ü–µ—Ä–∏–æ–¥: ${{timePeriod}} - –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:`, e);
        errors++;
      }}
    
      // –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∫–æ–º–±–∏–Ω–∞—Ü–∏—è–º–∏
      if (combinationIndex < totalCombinations) {{
        console.log(`‚è±Ô∏è [${{combinationIndex}}/${{totalCombinations}}] –û–∂–∏–¥–∞–Ω–∏–µ {delay} —Å–µ–∫ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –∫–æ–º–±–∏–Ω–∞—Ü–∏–µ–π...`);
        await new Promise(resolve => setTimeout(resolve, {delay} * 1000));
      }}
    }}
  }}

  // –£–¥–∞–ª—è–µ–º photoData —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ –≤–∫–ª—é—á–µ–Ω–æ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö
  if ({str(remove_photo_data).lower()}) {{
    console.log('\\nüì¶ –£–¥–∞–ª—è–µ–º photoData...');
    removePhotoData(results);
  }} else {{
    console.log('\\nüì¶ –£–¥–∞–ª–µ–Ω–∏–µ photoData –æ—Ç–∫–ª—é—á–µ–Ω–æ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö');
  }}

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
  const ts = getTimestamp();
  const blob = new Blob([JSON.stringify(results, null, 2)], {{ type: 'application/json' }});
  const a = document.createElement('a');
  a.href = URL.createObjectURL(blob);
  a.download = `rating_list_SIGMA_${{ts}}.json`;
  a.click();
  
  console.log(`\\nüèÅ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!`);
  console.log(`üìä –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`);
  console.log(`  - –ë–∏–∑–Ω–µ—Å-–±–ª–æ–∫–æ–≤ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${{processed}}`);
  console.log(`  - –ë–∏–∑–Ω–µ—Å-–±–ª–æ–∫–æ–≤ –ø—Ä–æ–ø—É—â–µ–Ω–æ: ${{skipped}}`);
  console.log(`  - –û—à–∏–±–æ–∫: ${{errors}}`);
  console.log(`  - –í—Å–µ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: ${{totalParticipants}}`);
  console.log(`  - –§–∞–π–ª —Å–∫–∞—á–∞–Ω: rating_list_SIGMA_${{ts}}.json`);
  
  // –í—ã–≤–æ–¥–∏–º –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –∫–∞–∂–¥–æ–º—É –±–∏–∑–Ω–µ—Å-–±–ª–æ–∫—É
  console.log(`\\nüìã –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –±–∏–∑–Ω–µ—Å-–±–ª–æ–∫–∞–º:`);
  Object.keys(results).forEach((businessBlock, index) => {{
    const pagesCount = results[businessBlock].length;
    const totalBlockParticipants = results[businessBlock].reduce((sum, page) => {{
      return sum + extractParticipants(page).length;
    }}, 0);
    console.log(`  ${{index + 1}}. ${{businessBlock}}: ${{pagesCount}} —Å—Ç—Ä–∞–Ω–∏—Ü, ${{totalBlockParticipants}} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤`);
  }});
}})();
'''
    
    return script

# –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
if __name__ == "__main__":
    script = generate_rating_list_script_fixed()
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–ª—å–∫–æ JavaScript –∫–æ–¥ –≤ —Ñ–∞–π–ª
    with open('test_script.js', 'w', encoding='utf-8') as f:
        f.write(script)
    print("–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
    print("–î–ª–∏–Ω–∞ —Å–∫—Ä–∏–ø—Ç–∞:", len(script))
    print("–°–∫—Ä–∏–ø—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ test_script.js")
